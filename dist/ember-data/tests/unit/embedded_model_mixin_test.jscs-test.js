module('JSCS - ember-data/tests/unit');
test('ember-data/tests/unit/embedded_model_mixin_test.js should pass jscs', function() {
  ok(false, 'ember-data/tests/unit/embedded_model_mixin_test.js should pass jscs.\nMultiple assigning variable declarations at ember-data/tests/unit/embedded_model_mixin_test.js :\n     1 |var get = Ember.get, set = Ember.set;\n--------^\n     2 |\n     3 |var Pet, Person, array;\nExtra comma following the final element of an array or object literal at ember-data/tests/unit/embedded_model_mixin_test.js :\n     8 |    var Model = DS.Model.extend(DS.EmbeddedModelMixin);\n     9 |    Pet = Model.extend({\n    10 |      name: DS.attr(\'string\'),\n--------------------------------------^\n    11 |    });\n    12 |    Person = Model.extend({\nExtra comma following the final element of an array or object literal at ember-data/tests/unit/embedded_model_mixin_test.js :\n    16 |    env = setupStore({\n    17 |      pet:      Pet,\n    18 |      person:    Person,\n--------------------------------^\n    19 |    });\n    20 |    env.store.modelFor(\'pet\');\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n    23 |\n    24 |  teardown: function() {\n    25 |    run(function(){\n--------------------------^\n    26 |      env.store.destroy();\n    27 |    });\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n    34 |test(\"will propagate errors\", function() {\n    35 |  var john;\n    36 |  run(function(){\n------------------------^\n    37 |    john = env.store.createRecord(Person, {name: \'John\'});\n    38 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\nOne space required after opening curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    35 |  var john;\n    36 |  run(function(){\n    37 |    john = env.store.createRecord(Person, {name: \'John\'});\n---------------------------------------------------^\n    38 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\n    39 |    john.get(\'pets\').pushObject(rufus)\nOne space required before closing curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    35 |  var john;\n    36 |  run(function(){\n    37 |    john = env.store.createRecord(Person, {name: \'John\'});\n---------------------------------------------------------------^\n    38 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\n    39 |    john.get(\'pets\').pushObject(rufus)\nOne space required after opening curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    36 |  run(function(){\n    37 |    john = env.store.createRecord(Person, {name: \'John\'});\n    38 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\n-------------------------------------------------^\n    39 |    john.get(\'pets\').pushObject(rufus)\n    40 |  });\nOne space required before closing curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    36 |  run(function(){\n    37 |    john = env.store.createRecord(Person, {name: \'John\'});\n    38 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\n--------------------------------------------------------------^\n    39 |    john.get(\'pets\').pushObject(rufus)\n    40 |  });\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n    42 |  equal(get(john, \'pets.firstObject.name\'), \'Rufus\', \"subrecord properly set\");\n    43 |\n    44 |  run(function(){\n------------------------^\n    45 |    john._inFlightAttributes = john._attributes;\n    46 |    john._attributes = {};\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n    48 |  });\n    49 |\n    50 |  run(function(){\n------------------------^\n    51 |    rufus._inFlightAttributes = rufus._attributes;\n    52 |    rufus._attributes = {};\nMissing space between , and rufus at ember-data/tests/unit/embedded_model_mixin_test.js :\n    52 |    rufus._attributes = {};\n    53 |    rufus.send(\'willCommit\');\n    54 |    john.putEmbeddedRecordInFlight(\'pets\',rufus);\n--------------------------------------------------^\n    55 |  });\n    56 |  run(function(){\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n    54 |    john.putEmbeddedRecordInFlight(\'pets\',rufus);\n    55 |  });\n    56 |  run(function(){\n------------------------^\n    57 |    john.adapterDidError();\n    58 |  });\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n    64 |test(\"will propagate invalidation\", function() {\n    65 |  var john;\n    66 |  run(function(){\n------------------------^\n    67 |    john = env.store.createRecord(Person, {name: \'John\'});\n    68 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\nOne space required after opening curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    65 |  var john;\n    66 |  run(function(){\n    67 |    john = env.store.createRecord(Person, {name: \'John\'});\n---------------------------------------------------^\n    68 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\n    69 |    john.get(\'pets\').pushObject(rufus)\nOne space required before closing curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    65 |  var john;\n    66 |  run(function(){\n    67 |    john = env.store.createRecord(Person, {name: \'John\'});\n---------------------------------------------------------------^\n    68 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\n    69 |    john.get(\'pets\').pushObject(rufus)\nOne space required after opening curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    66 |  run(function(){\n    67 |    john = env.store.createRecord(Person, {name: \'John\'});\n    68 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\n-------------------------------------------------^\n    69 |    john.get(\'pets\').pushObject(rufus)\n    70 |  });\nOne space required before closing curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    66 |  run(function(){\n    67 |    john = env.store.createRecord(Person, {name: \'John\'});\n    68 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\n--------------------------------------------------------------^\n    69 |    john.get(\'pets\').pushObject(rufus)\n    70 |  });\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n    72 |  equal(get(john, \'pets.firstObject.name\'), \'Rufus\', \"subrecord properly set\");\n    73 |\n    74 |  run(function(){\n------------------------^\n    75 |    john._inFlightAttributes = john._attributes;\n    76 |    john._attributes = {};\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n    78 |  });\n    79 |\n    80 |  run(function(){\n------------------------^\n    81 |    rufus._inFlightAttributes = rufus._attributes;\n    82 |    rufus._attributes = {};\nMissing space between , and rufus at ember-data/tests/unit/embedded_model_mixin_test.js :\n    82 |    rufus._attributes = {};\n    83 |    rufus.send(\'willCommit\');\n    84 |    john.putEmbeddedRecordInFlight(\'pets\',rufus);\n--------------------------------------------------^\n    85 |  });\n    86 |  run(function(){\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n    84 |    john.putEmbeddedRecordInFlight(\'pets\',rufus);\n    85 |  });\n    86 |  run(function(){\n------------------------^\n    87 |    john.adapterDidInvalidate({\'name\': \"Server don\'t like your name\"});\n    88 |  });\nOne space required after opening curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    85 |  });\n    86 |  run(function(){\n    87 |    john.adapterDidInvalidate({\'name\': \"Server don\'t like your name\"});\n---------------------------------------^\n    88 |  });\n    89 |  equal(john.get(\'isValid\'), false, \'Is valid\');\nOne space required before closing curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    85 |  });\n    86 |  run(function(){\n    87 |    john.adapterDidInvalidate({\'name\': \"Server don\'t like your name\"});\n----------------------------------------------------------------------------^\n    88 |  });\n    89 |  equal(john.get(\'isValid\'), false, \'Is valid\');\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n    94 |test(\"will propagate invalidation\", function() {\n    95 |  var john;\n    96 |  run(function(){\n------------------------^\n    97 |    john = env.store.createRecord(Person, {name: \'John\'});\n    98 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\nOne space required after opening curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    95 |  var john;\n    96 |  run(function(){\n    97 |    john = env.store.createRecord(Person, {name: \'John\'});\n---------------------------------------------------^\n    98 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\n    99 |    john.get(\'pets\').pushObject(rufus)\nOne space required before closing curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    95 |  var john;\n    96 |  run(function(){\n    97 |    john = env.store.createRecord(Person, {name: \'John\'});\n---------------------------------------------------------------^\n    98 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\n    99 |    john.get(\'pets\').pushObject(rufus)\nOne space required after opening curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    96 |  run(function(){\n    97 |    john = env.store.createRecord(Person, {name: \'John\'});\n    98 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\n-------------------------------------------------^\n    99 |    john.get(\'pets\').pushObject(rufus)\n   100 |  });\nOne space required before closing curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n    96 |  run(function(){\n    97 |    john = env.store.createRecord(Person, {name: \'John\'});\n    98 |    rufus = env.store.createRecord(Pet, {name: \'Rufus\'});\n--------------------------------------------------------------^\n    99 |    john.get(\'pets\').pushObject(rufus)\n   100 |  });\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n   102 |  equal(get(john, \'pets.firstObject.name\'), \'Rufus\', \"subrecord properly set\");\n   103 |\n   104 |  run(function(){\n------------------------^\n   105 |    john._inFlightAttributes = john._attributes;\n   106 |    john._attributes = {};\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n   108 |  });\n   109 |\n   110 |  run(function(){\n------------------------^\n   111 |    rufus._inFlightAttributes = rufus._attributes;\n   112 |    rufus._attributes = {};\nMissing space between , and rufus at ember-data/tests/unit/embedded_model_mixin_test.js :\n   112 |    rufus._attributes = {};\n   113 |    rufus.send(\'willCommit\');\n   114 |    john.putEmbeddedRecordInFlight(\'pets\',rufus);\n--------------------------------------------------^\n   115 |  });\n   116 |  run(function(){\nOne (or more) spaces required before opening brace for block expressions at ember-data/tests/unit/embedded_model_mixin_test.js :\n   114 |    john.putEmbeddedRecordInFlight(\'pets\',rufus);\n   115 |  });\n   116 |  run(function(){\n------------------------^\n   117 |    john.adapterDidInvalidate({\'pets\': {0: {name: \"Server don\'t like pets name\"}}});\n   118 |  });\nOne space required after opening curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n   115 |  });\n   116 |  run(function(){\n   117 |    john.adapterDidInvalidate({\'pets\': {0: {name: \"Server don\'t like pets name\"}}});\n---------------------------------------^\n   118 |  });\n   119 |  equal(john.get(\'isValid\'), true, \'Is valid\');\nOne space required after opening curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n   115 |  });\n   116 |  run(function(){\n   117 |    john.adapterDidInvalidate({\'pets\': {0: {name: \"Server don\'t like pets name\"}}});\n------------------------------------------------^\n   118 |  });\n   119 |  equal(john.get(\'isValid\'), true, \'Is valid\');\nOne space required after opening curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n   115 |  });\n   116 |  run(function(){\n   117 |    john.adapterDidInvalidate({\'pets\': {0: {name: \"Server don\'t like pets name\"}}});\n----------------------------------------------------^\n   118 |  });\n   119 |  equal(john.get(\'isValid\'), true, \'Is valid\');\nOne space required before closing curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n   115 |  });\n   116 |  run(function(){\n   117 |    john.adapterDidInvalidate({\'pets\': {0: {name: \"Server don\'t like pets name\"}}});\n---------------------------------------------------------------------------------------^\n   118 |  });\n   119 |  equal(john.get(\'isValid\'), true, \'Is valid\');\nOne space required before closing curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n   115 |  });\n   116 |  run(function(){\n   117 |    john.adapterDidInvalidate({\'pets\': {0: {name: \"Server don\'t like pets name\"}}});\n----------------------------------------------------------------------------------------^\n   118 |  });\n   119 |  equal(john.get(\'isValid\'), true, \'Is valid\');\nOne space required before closing curly brace at ember-data/tests/unit/embedded_model_mixin_test.js :\n   115 |  });\n   116 |  run(function(){\n   117 |    john.adapterDidInvalidate({\'pets\': {0: {name: \"Server don\'t like pets name\"}}});\n-----------------------------------------------------------------------------------------^\n   118 |  });\n   119 |  equal(john.get(\'isValid\'), true, \'Is valid\');');
});
